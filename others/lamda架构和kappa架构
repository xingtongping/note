https://www.cnblogs.com/xiaodf/p/11642555.html


摘要：
lamda架构：
批处理层：基于完整的数据集来重新计算的，能够修复任何错误，后更新现有的数据视图
速度层：提供最新数据的实时视图来最小化延迟。速度层所生成的数据视图可能不如批处理层最终生成的视图那样准确或完整，但它们几乎在收到数据后立即可用。而当同样的数据在批处理层处理完成后，在速度层的数据就可以被替代掉了。

局限：维护 Lambda 架构的复杂性在于我们要同时维护两套系统架构：批处理层和速度层。我们已经说过了，在架构中加入批处理层是因为从批处理层得到的结果具有高准确性，而加入速度层是因为它在处理大规模数据时具有低延时性。

kappa架构：
改进 Lambda 架构中的速度层，使它既能够进行实时数据处理，同时也有能力在业务逻辑更新的情况下重新处理以前处理过的历史数据，不用维护两套代码
利用kafka数据重播，如kafka保留历史数据365天，如果我们需要改进现有的逻辑算法，那就表示我们需要对历史数据进行重新处理。

局限：Kappa 架构的批处理和流处理都放在了速度层上，这导致了这种架构是使用同一套代码来处理算法逻辑的。所以 Kappa 架构并不适用于批处理和流处理代码逻辑不一致的场景。
